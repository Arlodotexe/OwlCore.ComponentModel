<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Nullable>enable</Nullable>
    <LangVersion>11.0</LangVersion>
    <WarningsAsErrors>nullable</WarningsAsErrors>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>

    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>

    <!-- Include symbol files (*.pdb) in the built .nupkg -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>

    <Author>Arlo Godfrey</Author>
    <Version>0.8.1</Version>
    <Product>OwlCore</Product>
    <Description>Provides classes that are used to implement the run-time behavior of components.</Description>
    <PackageLicenseFile>LICENSE.txt</PackageLicenseFile>
    <PackageIcon>logo.png</PackageIcon>
    <PackageProjectUrl>https://github.com/Arlodotexe/OwlCore.ComponentModel</PackageProjectUrl>
    <PackageReleaseNotes>
--- 0.8.1 ---
[Improvements]
Minor documentation update for ISources and IReadOnlySources.

--- 0.8.0 ---
[New]
Added IFlushable
Added IHasId
Added ISources
Added IReadOnlySources
Added WritableLazySeekStream. Writes are held in the underlying LazySeekStream.MemoryStream and are written to a given destination stream on flush.

[Improvements]
Removed internal IsExternalInit in favor of PolySharp.
MemoryStream and SourceStream are now protected instead of private on LazySeekStream.
      
--- 0.7.0 ---
[Breaking]
SettingsBase has been moved into a separate package, OwlCore.ComponentModel.Settings. This allows us to remove the dependency on OwlCore.Storage, which is not strictly needed for most consumers of this package.

--- 0.6.0 ---
[New]
Added LengthOverrideStream, a simple Stream wrapper that allows overriding the Length property.

[Fixes]
Fixed numerous remaining issues with LazySeekStream, including seeking past end of stream and seeking from SeekOrigin.End.

--- 0.5.0 ---
[New]
Added LazySeekStream. Wraps around a non-seekable stream to enable seeking functionality with lazy loading of the source.

--- 0.4.0 ---
[New]
Added IDelegable to replace IDelegatable in a future release.
Added NotifyCollectionChangedEventHandler and NotifyCollectionChangedEventArgs to replace CollectionChangedEventHandler and CollectionChangedItem in a future release.

[Improvements]
Marked IDelegatable as Obsolete. Will be renamed to IDelegable in a future release.
Marked CollectionChangedEventHandler as Obsolete. Will be replaced with a generic NotifyCollectionChangedEventHandler in the future.
      
--- 0.3.0 ---
[Breaking]
Inherited breaking changes from OwlCore.Storage 0.8.x.

[Improvements]
Updated all package dependencies to latest stable version.

--- 0.2.0 ---
[New]
Added SettingsBase.OnPropertyChanged(string) method. Allows cleaner INPC invocation.

[Improvements]
All events in SettingsBase are now virtual.

--- 0.1.2 ---
[Fixes]
Fixed an issue where SettingsBase couldn't parse the type data for an Enum.

--- 0.1.1 ---
[Fixes]
Fixed a possible multiple enumeration when calling SettingsBase.SaveAsync.

--- 0.1.0 ---
[New]
SettingsBase.HasUnsavedChanges has been added, with notification support.

[Improvements]
All public and protected methods in SettingsBase are now virtual.

--- 0.0.0 ---
[New]
Initial separated package release of OwlCore.ComponentModel. Transferred from OwlCore 0.1.0.
		</PackageReleaseNotes>
    <DebugType>embedded</DebugType>
    <NeutralLanguage>en</NeutralLanguage>
    <Authors>Arlo Godfrey</Authors>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(AssemblyName).xml</DocumentationFile>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Optimize>true</Optimize>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    <Deterministic>true</Deterministic>
  </PropertyGroup>

  <ItemGroup>
    <None Include="LICENSE.txt">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="8.0.0" />
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All" />
    <PackageReference Include="PolySharp" Version="1.14.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="System.Linq.Async" Version="6.0.1" />
    <PackageReference Include="CommunityToolkit.Diagnostics" Version="8.2.2" />
  </ItemGroup>

  <ItemGroup>
    <None Update="logo.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
</Project>